{"version":3,"sources":["webpack:///./example/main.ts","webpack:///./example/src/app.module.ts","webpack:///./src/index.ts","webpack:///./src/notification-bar.module.ts","webpack:///./src/notification-bar.service.ts","webpack:///./src/notification-bar.component.ts","webpack:///./example/src/app.component.ts","webpack:///./example/src/app.html"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["import { platformBrowserDynamic }      from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './src/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n/** WEBPACK FOOTER **\n ** ./example/main.ts\n **/","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { NotificationBarModule } from '../../src'\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    imports: [BrowserModule, FormsModule, NotificationBarModule],\n    declarations: [AppComponent],\n    bootstrap: [AppComponent ]\n})\nexport class AppModule {\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./example/src/app.module.ts\n **/","export * from './notification-bar.module';\nexport * from './notification-bar.service';\nexport * from './message-config';\n\nexport enum NotificationType { Info, Success, Error, Warning }\n\nexport interface Notification {\n    message: string;\n    type?: NotificationType;\n    typeValue?: string;\n    autoHide?: boolean;\n    hideDelay?: number;\n    isHtml?: boolean;\n    allowClose?: boolean;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.ts\n **/","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NotificationBarService } from './notification-bar.service';\nimport { NotificationBarComponent, MESSAGES_CONFIG } from './notification-bar.component';\nimport { MessagesConfig } from './message-config';\n\n\n\n@NgModule({\n    imports:      [\n        CommonModule\n    ],\n    declarations: [ NotificationBarComponent ],\n    providers: [ NotificationBarService ],\n    exports: [ NotificationBarComponent ]\n})\nexport class NotificationBarModule {\n\n    static forRoot(config: MessagesConfig): ModuleWithProviders {\n        return {\n            ngModule: NotificationBarModule,\n            providers: [\n                { provide: MESSAGES_CONFIG, useValue: config }\n            ]\n        };\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/notification-bar.module.ts\n **/","import { Injectable, EventEmitter } from '@angular/core';\n\nimport { Notification } from './index';\n\n/**\n * A service to create notification, It can be used from any component or guard\n */\n@Injectable()\nexport class NotificationBarService {\n\n\n    onCreate = new EventEmitter<Notification>();\n\n    constructor() {\n    }\n\n    create(notification: Notification) {\n        this.onCreate.emit(notification);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/notification-bar.service.ts\n **/","import {\n    Component, OnInit, trigger, state, style, transition, animate, Optional, Inject,\n    OpaqueToken\n} from '@angular/core';\n\nimport { NotificationBarService } from './notification-bar.service';\nimport { Notification, NotificationType } from './index';\nimport { MessagesConfig } from './message-config';\n\n\n\nexport const MESSAGES_CONFIG = new OpaqueToken('notification-bar.messages.config');\n\n/**\n *\n */\n@Component({\n    selector: 'notification-bar',\n    styles: [`\n        :host {\n          position: relative;\n          display: block;\n        }\n        \n        .notifications-container {\n          position: fixed;\n          top: 0px;\n          right: 0;\n          left: 0;\n          line-height: 25px;\n          width: 100%;\n          z-index: 6;\n          overflow: hidden;\n        }\n        \n        .notification {\n          position: relative;\n          text-align: center;\n          font-size: 12px;\n          color: #fff;\n        }\n        \n        .message {\n          padding: 0 12px;\n        }\n        \n        .error {\n          background-color: #F64747;\n          border-bottom: 1px solid #f31515;\n        }\n        \n        .success {\n          background-color: #03C9A9;\n          border-bottom: 1px solid #02aa8f;\n        }\n        \n        .warning {\n          background-color: #F7CA18;\n          border-bottom: 1px solid #e7ba08;\n        }\n        \n        .info {\n          background-color: #0c6997;\n          border-bottom: 1px solid #0c6997;\n        }\n        \n        .close-click {\n          font-size: 12px;\n          cursor: pointer;\n          padding: 10px;\n          margin: 0 auto;\n        }\n    `],\n    template: `\n        <div class=\"notifications-container\">\n            <div *ngFor=\"let notification of notifications; let i = index;\"\n                 class=\"notification {{notification.typeValue}}\"\n                 [@flyDown]>\n                <span *ngIf=\"notification.isHtml\" class=\"message\" [innerHTML]=\"notification.message\"></span>\n                <span *ngIf=\"!notification.isHtml\" class=\"message\">{{notification.message}}</span>\n                <span class=\"fa fa-close close-click\" *ngIf=\"notification.allowClose\" (click)=\"hideNotification(notification)\"></span>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('flyDown', [\n            state('in', style({\n                opacity: 1,\n                transform: 'translateY(0)'\n            })),\n            transition('void => *', [\n                style({\n                    opacity: 0,\n                    transform: 'translateY(-100%)'\n                }),\n                animate('600ms ease .2s 1 both')\n            ]),\n            transition('* => void', [\n                animate('200ms ease .2s 1 both', style({\n                    opacity: 0,\n                    transform: 'translateY(-100%)'\n                }))\n            ])\n        ])\n    ]\n})\nexport class NotificationBarComponent implements OnInit {\n\n    notifications: Notification[] = [];\n\n    defaults = {\n        message: '',\n        type: NotificationType.Info,\n        autoHide: true,\n        hideDelay: 3000,\n        isHtml: false,\n        allowClose: false\n    };\n\n    constructor(\n        @Inject(MESSAGES_CONFIG) @Optional() private config: MessagesConfig,\n        private notificationBarService: NotificationBarService\n    ) { }\n\n    ngOnInit() {\n        this.notificationBarService.onCreate.subscribe(notification => this.addNotification(notification));\n    }\n\n    addNotification(notification: Notification) {\n        let newNotification = Object.assign({}, this.defaults, notification);\n        newNotification.typeValue = NotificationType[newNotification.type].toLowerCase();\n        if (this.config) {\n            newNotification.message = this.config.messages[notification.message] || notification.message;\n        }\n\n        this.notifications = [\n            ...this.notifications,\n            newNotification\n        ];\n\n        if (newNotification.autoHide) {\n            window.setTimeout(() => {\n                this.hideNotification(newNotification);\n            }, newNotification.hideDelay);\n        }\n    }\n\n    hideNotification(notification: Notification) {\n        let index = this.notifications.indexOf(notification);\n\n        this.notifications = [\n            ...this.notifications.slice(0, index),\n            ...this.notifications.slice(index + 1)\n        ];\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/notification-bar.component.ts\n **/","import { Component, OnInit } from '@angular/core';\nimport { NotificationBarService, NotificationType } from '../../src'\n\n@Component({\n    selector: 'app',\n    template: require('./app.html')\n})\nexport class AppComponent implements OnInit {\n    enable: boolean = true;\n    count: number = 0;\n\n    constructor(\n        public notificationBarService: NotificationBarService\n    ) {\n    }\n\n    ngOnInit() {\n\n    }\n\n    createInfo() {\n        this.notificationBarService.create({ message: 'USER_SAVED', type: NotificationType.Info});\n    }\n\n    createSuccess() {\n        this.notificationBarService.create({ message: 'USER_SAVED', type: NotificationType.Success});\n    }\n\n    createError() {\n        this.notificationBarService.create({ message: 'USER_SAVED', type: NotificationType.Error});\n    }\n\n    createWarning() {\n        this.notificationBarService.create({ message: 'USER_SAVED', type: NotificationType.Warning});\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./example/src/app.component.ts\n **/","module.exports = \"<h2>Hello World</h2>\\n<notification-bar></notification-bar>\\n\\n<h3>Create Notifications - </h3>\\n<button (click)=\\\"createInfo()\\\">Info</button>\\n<button (click)=\\\"createError()\\\">Info</button>\\n<button (click)=\\\"createSuccess()\\\">Info</button>\\n<button (click)=\\\"createWarning()\\\">Info</button>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./example/src/app.html\n ** module id = 33\n ** module chunks = 0\n **/"],"sourceRoot":""}